package com.education.system.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class StudentElectiveExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table student_elective
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table student_elective
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table student_elective
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student_elective
     *
     * @mbggenerated
     */
    public StudentElectiveExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student_elective
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student_elective
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student_elective
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student_elective
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student_elective
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student_elective
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student_elective
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student_elective
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student_elective
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student_elective
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table student_elective
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andStudentIdIsNull() {
            addCriterion("student_id is null");
            return (Criteria) this;
        }

        public Criteria andStudentIdIsNotNull() {
            addCriterion("student_id is not null");
            return (Criteria) this;
        }

        public Criteria andStudentIdEqualTo(Integer value) {
            addCriterion("student_id =", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotEqualTo(Integer value) {
            addCriterion("student_id <>", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdGreaterThan(Integer value) {
            addCriterion("student_id >", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("student_id >=", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdLessThan(Integer value) {
            addCriterion("student_id <", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdLessThanOrEqualTo(Integer value) {
            addCriterion("student_id <=", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdIn(List<Integer> values) {
            addCriterion("student_id in", values, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotIn(List<Integer> values) {
            addCriterion("student_id not in", values, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdBetween(Integer value1, Integer value2) {
            addCriterion("student_id between", value1, value2, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotBetween(Integer value1, Integer value2) {
            addCriterion("student_id not between", value1, value2, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentNameIsNull() {
            addCriterion("student_name is null");
            return (Criteria) this;
        }

        public Criteria andStudentNameIsNotNull() {
            addCriterion("student_name is not null");
            return (Criteria) this;
        }

        public Criteria andStudentNameEqualTo(String value) {
            addCriterion("student_name =", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameNotEqualTo(String value) {
            addCriterion("student_name <>", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameGreaterThan(String value) {
            addCriterion("student_name >", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameGreaterThanOrEqualTo(String value) {
            addCriterion("student_name >=", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameLessThan(String value) {
            addCriterion("student_name <", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameLessThanOrEqualTo(String value) {
            addCriterion("student_name <=", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameLike(String value) {
            addCriterion("student_name like", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameNotLike(String value) {
            addCriterion("student_name not like", value, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameIn(List<String> values) {
            addCriterion("student_name in", values, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameNotIn(List<String> values) {
            addCriterion("student_name not in", values, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameBetween(String value1, String value2) {
            addCriterion("student_name between", value1, value2, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentNameNotBetween(String value1, String value2) {
            addCriterion("student_name not between", value1, value2, "studentName");
            return (Criteria) this;
        }

        public Criteria andStudentClassIsNull() {
            addCriterion("student_class is null");
            return (Criteria) this;
        }

        public Criteria andStudentClassIsNotNull() {
            addCriterion("student_class is not null");
            return (Criteria) this;
        }

        public Criteria andStudentClassEqualTo(String value) {
            addCriterion("student_class =", value, "studentClass");
            return (Criteria) this;
        }

        public Criteria andStudentClassNotEqualTo(String value) {
            addCriterion("student_class <>", value, "studentClass");
            return (Criteria) this;
        }

        public Criteria andStudentClassGreaterThan(String value) {
            addCriterion("student_class >", value, "studentClass");
            return (Criteria) this;
        }

        public Criteria andStudentClassGreaterThanOrEqualTo(String value) {
            addCriterion("student_class >=", value, "studentClass");
            return (Criteria) this;
        }

        public Criteria andStudentClassLessThan(String value) {
            addCriterion("student_class <", value, "studentClass");
            return (Criteria) this;
        }

        public Criteria andStudentClassLessThanOrEqualTo(String value) {
            addCriterion("student_class <=", value, "studentClass");
            return (Criteria) this;
        }

        public Criteria andStudentClassLike(String value) {
            addCriterion("student_class like", value, "studentClass");
            return (Criteria) this;
        }

        public Criteria andStudentClassNotLike(String value) {
            addCriterion("student_class not like", value, "studentClass");
            return (Criteria) this;
        }

        public Criteria andStudentClassIn(List<String> values) {
            addCriterion("student_class in", values, "studentClass");
            return (Criteria) this;
        }

        public Criteria andStudentClassNotIn(List<String> values) {
            addCriterion("student_class not in", values, "studentClass");
            return (Criteria) this;
        }

        public Criteria andStudentClassBetween(String value1, String value2) {
            addCriterion("student_class between", value1, value2, "studentClass");
            return (Criteria) this;
        }

        public Criteria andStudentClassNotBetween(String value1, String value2) {
            addCriterion("student_class not between", value1, value2, "studentClass");
            return (Criteria) this;
        }

        public Criteria andElectiveIdIsNull() {
            addCriterion("elective_id is null");
            return (Criteria) this;
        }

        public Criteria andElectiveIdIsNotNull() {
            addCriterion("elective_id is not null");
            return (Criteria) this;
        }

        public Criteria andElectiveIdEqualTo(Integer value) {
            addCriterion("elective_id =", value, "electiveId");
            return (Criteria) this;
        }

        public Criteria andElectiveIdNotEqualTo(Integer value) {
            addCriterion("elective_id <>", value, "electiveId");
            return (Criteria) this;
        }

        public Criteria andElectiveIdGreaterThan(Integer value) {
            addCriterion("elective_id >", value, "electiveId");
            return (Criteria) this;
        }

        public Criteria andElectiveIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("elective_id >=", value, "electiveId");
            return (Criteria) this;
        }

        public Criteria andElectiveIdLessThan(Integer value) {
            addCriterion("elective_id <", value, "electiveId");
            return (Criteria) this;
        }

        public Criteria andElectiveIdLessThanOrEqualTo(Integer value) {
            addCriterion("elective_id <=", value, "electiveId");
            return (Criteria) this;
        }

        public Criteria andElectiveIdIn(List<Integer> values) {
            addCriterion("elective_id in", values, "electiveId");
            return (Criteria) this;
        }

        public Criteria andElectiveIdNotIn(List<Integer> values) {
            addCriterion("elective_id not in", values, "electiveId");
            return (Criteria) this;
        }

        public Criteria andElectiveIdBetween(Integer value1, Integer value2) {
            addCriterion("elective_id between", value1, value2, "electiveId");
            return (Criteria) this;
        }

        public Criteria andElectiveIdNotBetween(Integer value1, Integer value2) {
            addCriterion("elective_id not between", value1, value2, "electiveId");
            return (Criteria) this;
        }

        public Criteria andElectiveScoreIsNull() {
            addCriterion("elective_score is null");
            return (Criteria) this;
        }

        public Criteria andElectiveScoreIsNotNull() {
            addCriterion("elective_score is not null");
            return (Criteria) this;
        }

        public Criteria andElectiveScoreEqualTo(BigDecimal value) {
            addCriterion("elective_score =", value, "electiveScore");
            return (Criteria) this;
        }

        public Criteria andElectiveScoreNotEqualTo(BigDecimal value) {
            addCriterion("elective_score <>", value, "electiveScore");
            return (Criteria) this;
        }

        public Criteria andElectiveScoreGreaterThan(BigDecimal value) {
            addCriterion("elective_score >", value, "electiveScore");
            return (Criteria) this;
        }

        public Criteria andElectiveScoreGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("elective_score >=", value, "electiveScore");
            return (Criteria) this;
        }

        public Criteria andElectiveScoreLessThan(BigDecimal value) {
            addCriterion("elective_score <", value, "electiveScore");
            return (Criteria) this;
        }

        public Criteria andElectiveScoreLessThanOrEqualTo(BigDecimal value) {
            addCriterion("elective_score <=", value, "electiveScore");
            return (Criteria) this;
        }

        public Criteria andElectiveScoreIn(List<BigDecimal> values) {
            addCriterion("elective_score in", values, "electiveScore");
            return (Criteria) this;
        }

        public Criteria andElectiveScoreNotIn(List<BigDecimal> values) {
            addCriterion("elective_score not in", values, "electiveScore");
            return (Criteria) this;
        }

        public Criteria andElectiveScoreBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("elective_score between", value1, value2, "electiveScore");
            return (Criteria) this;
        }

        public Criteria andElectiveScoreNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("elective_score not between", value1, value2, "electiveScore");
            return (Criteria) this;
        }

        public Criteria andElectiveGradeIsNull() {
            addCriterion("elective_grade is null");
            return (Criteria) this;
        }

        public Criteria andElectiveGradeIsNotNull() {
            addCriterion("elective_grade is not null");
            return (Criteria) this;
        }

        public Criteria andElectiveGradeEqualTo(String value) {
            addCriterion("elective_grade =", value, "electiveGrade");
            return (Criteria) this;
        }

        public Criteria andElectiveGradeNotEqualTo(String value) {
            addCriterion("elective_grade <>", value, "electiveGrade");
            return (Criteria) this;
        }

        public Criteria andElectiveGradeGreaterThan(String value) {
            addCriterion("elective_grade >", value, "electiveGrade");
            return (Criteria) this;
        }

        public Criteria andElectiveGradeGreaterThanOrEqualTo(String value) {
            addCriterion("elective_grade >=", value, "electiveGrade");
            return (Criteria) this;
        }

        public Criteria andElectiveGradeLessThan(String value) {
            addCriterion("elective_grade <", value, "electiveGrade");
            return (Criteria) this;
        }

        public Criteria andElectiveGradeLessThanOrEqualTo(String value) {
            addCriterion("elective_grade <=", value, "electiveGrade");
            return (Criteria) this;
        }

        public Criteria andElectiveGradeLike(String value) {
            addCriterion("elective_grade like", value, "electiveGrade");
            return (Criteria) this;
        }

        public Criteria andElectiveGradeNotLike(String value) {
            addCriterion("elective_grade not like", value, "electiveGrade");
            return (Criteria) this;
        }

        public Criteria andElectiveGradeIn(List<String> values) {
            addCriterion("elective_grade in", values, "electiveGrade");
            return (Criteria) this;
        }

        public Criteria andElectiveGradeNotIn(List<String> values) {
            addCriterion("elective_grade not in", values, "electiveGrade");
            return (Criteria) this;
        }

        public Criteria andElectiveGradeBetween(String value1, String value2) {
            addCriterion("elective_grade between", value1, value2, "electiveGrade");
            return (Criteria) this;
        }

        public Criteria andElectiveGradeNotBetween(String value1, String value2) {
            addCriterion("elective_grade not between", value1, value2, "electiveGrade");
            return (Criteria) this;
        }

        public Criteria andElectiveCreditIsNull() {
            addCriterion("elective_credit is null");
            return (Criteria) this;
        }

        public Criteria andElectiveCreditIsNotNull() {
            addCriterion("elective_credit is not null");
            return (Criteria) this;
        }

        public Criteria andElectiveCreditEqualTo(BigDecimal value) {
            addCriterion("elective_credit =", value, "electiveCredit");
            return (Criteria) this;
        }

        public Criteria andElectiveCreditNotEqualTo(BigDecimal value) {
            addCriterion("elective_credit <>", value, "electiveCredit");
            return (Criteria) this;
        }

        public Criteria andElectiveCreditGreaterThan(BigDecimal value) {
            addCriterion("elective_credit >", value, "electiveCredit");
            return (Criteria) this;
        }

        public Criteria andElectiveCreditGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("elective_credit >=", value, "electiveCredit");
            return (Criteria) this;
        }

        public Criteria andElectiveCreditLessThan(BigDecimal value) {
            addCriterion("elective_credit <", value, "electiveCredit");
            return (Criteria) this;
        }

        public Criteria andElectiveCreditLessThanOrEqualTo(BigDecimal value) {
            addCriterion("elective_credit <=", value, "electiveCredit");
            return (Criteria) this;
        }

        public Criteria andElectiveCreditIn(List<BigDecimal> values) {
            addCriterion("elective_credit in", values, "electiveCredit");
            return (Criteria) this;
        }

        public Criteria andElectiveCreditNotIn(List<BigDecimal> values) {
            addCriterion("elective_credit not in", values, "electiveCredit");
            return (Criteria) this;
        }

        public Criteria andElectiveCreditBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("elective_credit between", value1, value2, "electiveCredit");
            return (Criteria) this;
        }

        public Criteria andElectiveCreditNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("elective_credit not between", value1, value2, "electiveCredit");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table student_elective
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table student_elective
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}